# Generated by Django 3.2.18 on 2023-07-09 13:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=50)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position', models.CharField(max_length=100)),
                ('min_salary', models.CharField(blank=True, max_length=20)),
                ('max_salary', models.CharField(blank=True, max_length=20)),
                ('salary', models.TextField(blank=True, max_length=500)),
                ('employment_status', models.CharField(blank=True, max_length=50)),
                ('summary', models.TextField(blank=True, max_length=1000)),
                ('min_qualifications', models.TextField(blank=True, max_length=500)),
                ('pfd_qualifications', models.TextField(blank=True, max_length=500)),
                ('ideal_profile', models.TextField(blank=True, max_length=1000)),
                ('address', models.TextField(blank=True, max_length=500)),
                ('shift_pattern', models.TextField(blank=True, max_length=500)),
                ('benefit', models.TextField(blank=True, max_length=1000)),
                ('other', models.TextField(blank=True, max_length=2000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='JobCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Jobseeker',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('last_record_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('in_charge_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('intention', models.CharField(blank=True, max_length=10)),
                ('is_favorite', models.BooleanField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, max_length=1000)),
                ('is_public', models.BooleanField(blank=True, default=False, null=True)),
                ('position', models.CharField(max_length=100)),
                ('salary', models.CharField(blank=True, max_length=500)),
                ('summary', models.TextField(blank=True, max_length=1000)),
                ('min_qualifications', models.TextField(blank=True, max_length=500)),
                ('pfd_qualifications', models.TextField(blank=True, max_length=500)),
                ('ideal_profile', models.TextField(blank=True, max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.job')),
                ('jobseeker_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.jobseeker')),
                ('organization_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.organization')),
            ],
        ),
        migrations.CreateModel(
            name='RecruitingCompany',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('corporate_number', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=150)),
                ('company_url', models.CharField(blank=True, max_length=200)),
                ('recruiting_url', models.CharField(blank=True, max_length=200)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('import_date', models.DateField(blank=True, null=True)),
                ('close_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('before_record_at', models.DateTimeField(blank=True, null=True)),
                ('is_long_time', models.BooleanField(default=False)),
                ('is_checked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.organization')),
                ('proposal_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.proposal')),
            ],
        ),
        migrations.AddField(
            model_name='jobseeker',
            name='organization_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.organization'),
        ),
        migrations.AddField(
            model_name='jobseeker',
            name='proposals',
            field=models.ManyToManyField(blank=True, through='api.Proposal', to='api.Job'),
        ),
        migrations.AddField(
            model_name='job',
            name='job_category_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.jobcategory'),
        ),
        migrations.AddField(
            model_name='job',
            name='organization_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.organization'),
        ),
        migrations.AddField(
            model_name='job',
            name='recruiting_company_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.recruitingcompany'),
        ),
        migrations.AddField(
            model_name='user',
            name='organization_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.organization'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
